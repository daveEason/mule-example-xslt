/*
 * Generated by the Mule project wizard. http://mule.mulesoft.org
 *
 * The software in this package is published under the terms of the CPAL v1.0
 * license, a copy of which has been included with this distribution in the
 * LICENSE.txt file.
 */
package com.mulesoft.example.muleexamplexslt;

import org.mule.api.MuleMessage;
import org.mule.module.client.MuleClient;
import org.mule.tck.FunctionalTestCase;
import org.mule.transport.NullPayload;

import java.util.HashMap;

public class MuleexamplexsltTestCase extends FunctionalTestCase
{

    public HashMap headerProps = new HashMap();

    protected String getConfigResources()
    {
        return "mule-config.xml";
    }

    public void testGetTestHTML() throws Exception
    {
        MuleClient client = new MuleClient(muleContext);
        headerProps.put("http.method","GET");
        MuleMessage result = client.send("http://localhost:48310/Calculator/GetTestHTML", null, headerProps);
        assertNotNull(result);
        assertNull(result.getExceptionPayload());
        assertFalse(result.getPayload() instanceof NullPayload);
        assertEquals("<html><head><Title>Test HTML</Title></head><br/><body>This is a test for html content</body></html>", result.getPayloadAsString());
    }

    public void testGetCurrentBankRateXML() throws Exception
    {
        MuleClient client = new MuleClient(muleContext);
        headerProps.put("http.method","GET");
        MuleMessage result = client.send("http://localhost:48310/Calculator/GetBankRateXML", null, headerProps);
        assertNotNull(result);
        assertNull(result.getExceptionPayload());
        assertFalse(result.getPayload() instanceof NullPayload);
        assertEquals("<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?><bankRate><rate>", result.getPayloadAsString().substring(0,71));
    }

    public void testGetCurrentBankRateHTML() throws Exception
    {
        MuleClient client = new MuleClient(muleContext);
        headerProps.put("http.method","GET");
        MuleMessage result = client.send("http://localhost:48310/Calculator/GetBankRateHTML", null, headerProps);
        assertNotNull(result);
        assertNull(result.getExceptionPayload());
        assertFalse(result.getPayload() instanceof NullPayload);

        String output = result.getPayloadAsString();
        System.out.println(output);

        //TODO Assert the correct data has been received
        assertEquals("<html xmlns=\"http://www.w3.org/1999/xhtml\">\n" +
                "   <head>\n" +
                "      <title>Bank Rate XML 2 HTML Example</title>\n" +
                "   </head>\n" +
                "   <body>\n" +
                "      <h1>Bank Name and Bank Rate for loan</h1><br></br>\n" +
                "      The Bank Name found is:\n" +
                "      <br></br>\n" +
                "      The Rate at this bank is:", result.getPayloadAsString().substring(0,259));

    }

}
